<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>情报学基础学习-1.Data_Storage</title>
    <link href="/2020/11/25/%E6%83%85%E6%8A%A5%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-1-Data-Storage/"/>
    <url>/2020/11/25/%E6%83%85%E6%8A%A5%E5%AD%A6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-1-Data-Storage/</url>
    
    <content type="html"><![CDATA[<h1 id="1-1-Bits-and-Their-Storage"><a href="#1-1-Bits-and-Their-Storage" class="headerlink" title="1.1 Bits and Their Storage"></a>1.1 Bits and Their Storage</h1><p><strong>Bits</strong>: 0s and 1s</p><h2 id="Boolean-Operation"><a href="#Boolean-Operation" class="headerlink" title="Boolean Operation"></a>Boolean Operation</h2><p>There are there kinds of boolean operations.</p><ul><li>AND: A AND B is True, A is True and B is True</li><li>OR: A OR B is True, At least one of A and B is True</li><li>XOR: A XOR B is True, either A or B but not both</li></ul><h2 id="Gates-and-Flip-Flop"><a href="#Gates-and-Flip-Flop" class="headerlink" title="Gates and Flip-Flop"></a>Gates and Flip-Flop</h2><h3 id="Gates"><a href="#Gates" class="headerlink" title="Gates:"></a>Gates:</h3><ul><li>AND:</li><li>OR:</li><li>XOR:</li><li>NOT:</li></ul><h3 id="Flip-flop"><a href="#Flip-flop" class="headerlink" title="Flip-flop"></a>Flip-flop</h3><p>A device to store a bit, constructed of gates.</p><h2 id="Hexadecimal-Notation-十六进制记数法"><a href="#Hexadecimal-Notation-十六进制记数法" class="headerlink" title="Hexadecimal Notation 十六进制记数法"></a>Hexadecimal Notation 十六进制记数法</h2><p>Stream：A long string of bits (0s and 1s)<br>Hard to read and comprehend. So we need a new shorthand notation to simplify the representation of the string, which is <strong><em>Hexadecimal Notation</em></strong>.</p><ul><li>Takes advantage of the fact that bit patterns within a machine tend to have lengths in multiples of four.</li><li>Represent Table <ul><li>TODO:</li></ul></li></ul><h1 id="1-2-Main-Memory"><a href="#1-2-Main-Memory" class="headerlink" title="1.2 Main Memory"></a>1.2 Main Memory</h1><p>A computer store a large number collection of <strong><em>circuits</em></strong>(such as flip-flops), each storing a <strong>single bit</strong> .This bit reservoir is known as the machine’s <strong><em>main memory</em></strong>.</p><h2 id="Memory-Organization"><a href="#Memory-Organization" class="headerlink" title="Memory Organization"></a>Memory Organization</h2><h3 id="Cells"><a href="#Cells" class="headerlink" title="Cells"></a>Cells</h3><p>Main memory is organized in manageable units called cells. A typical cell size being <strong>eight bits</strong> which is one <strong>byte</strong>.</p><ul><li><strong>high-order end</strong>, or the most significant bit is the <strong>left</strong> end of the row (which is a memory cell).<br>  如果这个cell被表示为数字，则这个MSB代表了这个cell最重要的内容，数字的正负，1代表正，0代表负。</li><li><strong>low-order end</strong>,  or the least significant bit is the <strong>right</strong> end of the row (which is a memory cell).<br>  如果这个cell被表示为数字，则这个LSB代表了这个cell最不重要的内容，指示数字很小的变化。</li></ul><h3 id="Address"><a href="#Address" class="headerlink" title="Address"></a>Address</h3><p>A unique “name” assign to a cell. The Address system not only gives us a way of uniquely <strong>identifying</strong> each cell but also associates <strong>an order</strong> to the cells. Which means there are “the next cell” and “the previous cell”.</p><ul><li>which means you can store bit patterns that may be longer than the length of a single cell.<br>  For example, we can still store a string of 16 bits merely by using two consecutive memory cells.</li><li>Read operation: get data from the memory by asking for the content of the address.</li><li>Write operation: record information in the memory by requesting that a certain bit pattern be placed in the cell at a particular address.</li></ul><h3 id="RAM-Random-Access-Memory"><a href="#RAM-Random-Access-Memory" class="headerlink" title="RAM (Random Access Memory)"></a>RAM (Random Access Memory)</h3><p>The main memory has the ability to access cells in any order.<br>Constructed using <strong>not</strong> flip-flop, but more complex technologies that provide greater miniaturization and faster response time. </p><ul><li><strong>DRAM</strong>: dynamic memory.</li><li><strong>SDRAM</strong>: synchronous DRAM, decrease the time needed to retrieve the contents from its memory cells.</li></ul><h2 id="Measuring-Memory-Capacity"><a href="#Measuring-Memory-Capacity" class="headerlink" title="Measuring Memory Capacity"></a>Measuring Memory Capacity</h2><p>进位1024: bit, KB, MB, GB, TB.</p><h1 id="1-3-Mass-Memory"><a href="#1-3-Mass-Memory" class="headerlink" title="1.3 Mass Memory"></a>1.3 Mass Memory</h1><p>Additional memory devices including magnetic disks, CDs, DVDs, magnetic tapes, flash drives, and solid-state disks(SSD).</p><ul><li><strong>Pros</strong>: less volatility, large storage capacities, low cost, and in many cases, the ability to remove the storage medium from the machine for archival purposes.</li><li><strong>Cons</strong>: require mechanical motion and therefore require significantly more time to store and retrieve data than a machine’s main memory. Storage systems with moving parts are more prone to mechanical failures than solid state systems.</li></ul><h2 id="Magnetic-Systems"><a href="#Magnetic-Systems" class="headerlink" title="Magnetic Systems"></a>Magnetic Systems</h2><p>TODO: </p><h2 id="Optical-Systems"><a href="#Optical-Systems" class="headerlink" title="Optical Systems"></a>Optical Systems</h2><p>TODO:</p><h2 id="Flash-Drives"><a href="#Flash-Drives" class="headerlink" title="Flash Drives"></a>Flash Drives</h2><p>TODO: </p><h1 id="1-4-Representing-Information-as-Bit-Patterns"><a href="#1-4-Representing-Information-as-Bit-Patterns" class="headerlink" title="1.4 Representing Information as Bit Patterns"></a>1.4 Representing Information as Bit Patterns</h1><h2 id="Representing-Text"><a href="#Representing-Text" class="headerlink" title="Representing Text"></a>Representing Text</h2><p>TODO:</p><h2 id="Representing-Numeric-Values"><a href="#Representing-Numeric-Values" class="headerlink" title="Representing Numeric Values"></a>Representing Numeric Values</h2><p>TODO:</p><h2 id="Representing-Images"><a href="#Representing-Images" class="headerlink" title="Representing Images"></a>Representing Images</h2><p>TODO:</p><h2 id="Representing-Sound"><a href="#Representing-Sound" class="headerlink" title="Representing Sound"></a>Representing Sound</h2><p>TODO:</p><h1 id="1-5-The-Binary-System"><a href="#1-5-The-Binary-System" class="headerlink" title="1.5 The Binary System"></a>1.5 The Binary System</h1><h2 id="Binary-Notation"><a href="#Binary-Notation" class="headerlink" title="Binary Notation"></a>Binary Notation</h2><p>TODO:</p><h2 id="Binary-Addition"><a href="#Binary-Addition" class="headerlink" title="Binary Addition"></a>Binary Addition</h2><p>TODO:</p><h2 id="Fractions-in-Binary"><a href="#Fractions-in-Binary" class="headerlink" title="Fractions in Binary"></a>Fractions in Binary</h2><p>TODO:</p>]]></content>
    
    
    <categories>
      
      <category>勉強力</category>
      
    </categories>
    
    
    <tags>
      
      <tag>EN</tag>
      
      <tag>CS</tag>
      
      <tag>一般入试</tag>
      
      <tag>ZN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A Simple Guideline to build your own Blog</title>
    <link href="/2020/11/16/A%20Simple%20Guideline%20to%20build%20your%20own%20Blog/"/>
    <url>/2020/11/16/A%20Simple%20Guideline%20to%20build%20your%20own%20Blog/</url>
    
    <content type="html"><![CDATA[<p>Welcome to My Blog! This is my very first post. In this post, a simple guideline of using Hexo and fluid to build and beatify your own Blog will be provided. If you have any question, please check the <a href="https://hexo.io/docs/">Hexo offical document</a> and <a href="https://hexo.fluid-dev.com/docs">Fluid offical document</a> for more detailed information.</p><h2 id="The-Environment"><a href="#The-Environment" class="headerlink" title="The Environment"></a>The Environment</h2><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><p>Download Git in the offical website: <a href="https://git-scm.com/download/win">Git - Downloading Package</a>.</p><h3 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h3><p>Download Node.js in the offical website: <a href="https://nodejs.org/en/download/">Download | Node.js</a>.</p><h2 id="Init-Hexo-Project"><a href="#Init-Hexo-Project" class="headerlink" title="Init Hexo Project"></a>Init Hexo Project</h2><h3 id="Install-hexo-cli"><a href="#Install-hexo-cli" class="headerlink" title="Install hexo-cli"></a>Install hexo-cli</h3><pre><code class="hljs bash">$ npm install -g hexo-cli</code></pre><h3 id="Init-hexo-project"><a href="#Init-hexo-project" class="headerlink" title="Init hexo project"></a>Init hexo project</h3><pre><code class="hljs bash">$ hexo init blog</code></pre><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;Post Name&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><p>Show the website in localhost.</p><pre><code class="hljs bash">$ hexo s</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Config-deployment"><a href="#Config-deployment" class="headerlink" title="Config deployment"></a>Config deployment</h3><p>Open the file <code>_config.yml</code> in folder <code>/themes</code> and modify the deploy part as follows:</p><pre><code class="hljs bash">deploy:    <span class="hljs-built_in">type</span>: git    repo: <span class="hljs-string">&#x27;your repository URL&#x27;</span>    branch: master</code></pre><h3 id="Save-the-configuration-file"><a href="#Save-the-configuration-file" class="headerlink" title="Save the configuration file"></a>Save the configuration file</h3><pre><code class="hljs bash">$ npm install hexo-deployer-git --save</code></pre><h3 id="Clean-static-files"><a href="#Clean-static-files" class="headerlink" title="Clean static files"></a>Clean static files</h3><pre><code class="hljs bash">$ hexo clean</code></pre><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo g</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo d</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="Using-Theme-Fluid"><a href="#Using-Theme-Fluid" class="headerlink" title="Using Theme Fluid"></a>Using Theme Fluid</h2><h3 id="Install-Fluid"><a href="#Install-Fluid" class="headerlink" title="Install Fluid"></a>Install Fluid</h3><p>If your Hexo version &gt;= 5.0.0, you can install Fluid via Npm:</p><pre><code class="hljs bash">$ npm install --save hexo-theme-fluid</code></pre><p>Then create <code>_config.fluid.yml</code> in the blog directory and copy the content of <code>_config.yml</code> in <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">Page</a>.</p><h3 id="Set-theme"><a href="#Set-theme" class="headerlink" title="Set theme"></a>Set theme</h3><p>Edit <code>_config.yml</code> in the blog root directory as follows:</p><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid</code></pre><h3 id="Create-about-page"><a href="#Create-about-page" class="headerlink" title="Create about page"></a>Create about page</h3><p>The about page needs to be created manually:</p><pre><code class="hljs bash">$ hexo new page about</code></pre><p>Then edit <code>/source/about/index.md</code> and add <code>layout</code> attribute.<br>The modified example is as follows:</p><pre><code class="hljs yaml"><span class="hljs-meta">---</span><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><span class="hljs-attr">date:</span> <span class="hljs-number">2020-02-23 19:20:33</span><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><span class="hljs-meta">---</span><span class="hljs-string">About</span> <span class="hljs-string">content</span></code></pre><h3 id="More-configuration"><a href="#More-configuration" class="headerlink" title="More configuration"></a>More configuration</h3><p>For more information, please visit the <a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">Offical document</a>.</p>]]></content>
    
    
    <categories>
      
      <category>勉強力</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Blog</tag>
      
      <tag>EN</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
